# Generated by Django 3.2.6 on 2023-05-25 08:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('biography', models.TextField(null=True)),
                ('birthday', models.DateTimeField()),
                ('deathday', models.DateField(null=True)),
                ('gender', models.CharField(max_length=10)),
                ('place_of_birth', models.TextField(null=True)),
                ('popularity', models.FloatField(null=True)),
                ('profile_path', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('release_date', models.DateField()),
                ('popularity', models.FloatField(null=True)),
                ('vote_count', models.IntegerField(null=True)),
                ('vote_average', models.FloatField(null=True)),
                ('overview', models.TextField(null=True)),
                ('backdrop_path_original', models.TextField(null=True)),
                ('poster_path_original', models.TextField(max_length=200)),
                ('trailerUrl', models.TextField()),
                ('budget', models.IntegerField(null=True)),
                ('revenue', models.IntegerField(null=True)),
                ('runtime', models.IntegerField(null=True)),
                ('homepage', models.TextField(null=True)),
                ('actor', models.ManyToManyField(related_name='movie_actor', to='movies.Actor')),
                ('genres', models.ManyToManyField(to='movies.Genre')),
                ('movie_dislike_users', models.ManyToManyField(related_name='movieDislike', to=settings.AUTH_USER_MODEL)),
                ('movie_like_users', models.ManyToManyField(related_name='movielike', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo_path', models.TextField(null=True)),
                ('original_country', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Worldcup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movies', models.ManyToManyField(blank=True, related_name='worldcups', through='movies.Ranking', to='movies.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Scoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dislike_users', models.ManyToManyField(related_name='dislike_reviews', to=settings.AUTH_USER_MODEL)),
                ('like_users', models.ManyToManyField(related_name='like_reviews', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ranking',
            name='worldcup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.worldcup'),
        ),
        migrations.AddField(
            model_name='movie',
            name='production_companies',
            field=models.ManyToManyField(related_name='movie_companies', to='movies.Production'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dislike_comment_users', models.ManyToManyField(related_name='dislike_comments', to=settings.AUTH_USER_MODEL)),
                ('like_comment_users', models.ManyToManyField(related_name='like_comments', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_movie', to='movies.movie')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_review', to='movies.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
